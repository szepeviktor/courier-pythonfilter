# List the names of the filters that you want to use
# in this file.

# debug: prints debugging information to the mail log.
# debug

# log_aliases: logs info about the alias used to reach recipients
# log_aliases

# noduplicates: checks for duplicate recipients which may occur due to
#    alias expansion, and removes the duplicates.
# noduplicates

# clamav: scans each message MIME part with the ClamAV virus scanner
# clamav

# sentfolder: copies messages sent by local users back to the sender.
#    See README for the maildrop rule required by this module.
# sentfolder

# auto_whitelist: tracks messages sent by authenticated senders, and
#    exempts reply messages from further filtering.
# auto_whitelist

# whitelist_relayclients: exempts IP addresses for which you relay
#    from further filtering.
# whitelist_relayclients

# whitelist_auth: exempts users who authenticate from further filtering.
# whitelist_auth

# whitelist_block: exempts IP addresses and networks which have an
#    empty BLOCK value in smtpaccess.dat
# whitelist_block

# whitelist_dnswl: exempts IP addresses listed in a DNS whitelist
# whitelist_dnswl

# whitelist_spf: exempts senders whose SPF records approve their address.
# whitelist_spf

# deliveredto: checks for Delivered-To header with local domains
# deliveredto

# privateaddr: restricts addresses to specific senders
# privateaddr

# spfcheck: checks the sender against SPF records.
# spfcheck

# nosuccessdsn: checks for senders who request a notice on successful
#    delivery, and remove any delivery notice requests found.  This
#    eliminates notices to spammers who can't receive them anyway, and
#    increases the privacy of your system.
# nosuccessdsn

# localsenders: requires that sender address is a valid user account
#    for local and hosted domains.  Note that email aliases,
#    dot-courier aliases, etc, will not be allowed.
# localsenders

# comeagain: issues a temporary failure notice to senders who haven't
#    been seen before.  This blocks most spam engines and viruses.
#    It's a simplified version of greylisting.
# comeagain

# greylist: A more complete implementation of the strategy described
#    here: http://projects.puremagic.com/greylisting/whitepaper.html
#    greylist and comeagain should not be used together.  This
#    implementation is based on one written by Georg Lutz:
#    http://www.georglutz.de/wiki/CourierServer
# greylist

# dialback: checks the envelope sender's address to make sure that a
#    bounce or reply can be delivered.  Mail from addresses that can't
#    be verified will be refused.
# dialback

# ratelimit: tracks the number of messages received from a remote host
#    during a specified time interval and issues temporary failure
#    notices to hosts that send too much.
# ratelimit

# attachments: checks message MIME parts against a regex listing
#    forbidden patterns in the filename or name Content-type
#    parameters.
# attachments

# spamassassin: scans messages using "spamc".  This requires that
#    SpamAssassin's daemon is running.  Note that all mail will be
#    filtered under the settings for courier's user, which means that
#    your users' individual whitelists and thresholds won't be
#    processed.
# spamassassin

# quota: checks the maildir quota for each local recipient, and
#    temporarily refuses messages if any recipient is over quota
# quota

# add_signature: examines the AUTH information for authenticated
#    senders, and adds a signature to the message body if the domain
#    in the AUTH information is listed in the "domains" dictionary.
#    This dictionary can be customized in the
#    pythonfilter-modules.conf file.  It should be a mapping of
#    domains to the paths of plain text files which will be used as
#    signatures.
# add_signature

# noreceivedheaders: removes the first Received header from messages
#    sent by authenticated senders.  This should effectively remove
#    any identifying information about those senders.
# noreceivedheaders
# List the names of the filters that you want to use
# in this file.

# debug: prints debugging information to the mail log.
debug

# noduplicates: checks for duplicate recipients which may occur due to alias
#	expansion, and removes the duplicates.
# noduplicates

# whitelist: exempts IP addresses for which you relay from further filtering.
whitelist

# whitelist_auth: exempts users who authenticate from further filtering.
whitelist_auth

# privateaddr: restricts addresses to specific senders
# privateaddr

# spfcheck: checks the sender against SPF records.
# Requires: spf - http://www.wayforward.net/spf/
# spfcheck

# nosuccessdsn: checks for senders who request a notice on successful
#	delivery, and remove any delivery notice requests found.  This
#	eliminates notices to spammers who can't receive them anyway,
#	and increases the privacy of your system.
# nosuccessdsn

# comeagain: issues a temporary failure notice to senders who haven't been
#	seen before.  This blocks most spam engines and viruses.  It's a 
#   simplified version of greylisting.
# comeagain

# greylist: A more complete implementation of the strategy described here:
#    http://projects.puremagic.com/greylisting/whitepaper.html
#    greylist and comeagain should not be used together.  This
#    implementation is based on one written by Georg Lutz:
#    http://www.georglutz.de/wiki/CourierServer
# greylist

# dialback: checks the envelope sender's address to make sure that a bounce
#	or reply can be delivered.  Mail from addresses that can't be verified
#	will be refused.
# Requires: pydns - http://pydns.sourceforge.net/
# This filter should not be used until bugs in Python can be fixed.
# dialback

# ratelimit: tracks the number of messages received from a remote host during
#	a specified time interval and issues temporary failure notices to hosts
#	that send too much.
# ratelimit

# attachments: checks message MIME parts against a regex listing forbidden
#	patterns in the filename or name Content-type parameters.
# attachments

# clamav: scans each message MIME part with the ClamAV virus scanner
# Requires: pyclamav - http://norman.free.fr/norman/python/pyclamav/
# clamav

